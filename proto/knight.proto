syntax = "proto3";
package protoknight;
import "google/api/annotations.proto";
import "google/rpc/error_details.proto";
option go_package = "github.com/lafetz/quest-demo/knight/protoknight";
message AddKnightReq {
  string name = 1;
  string email = 2;
}

message AddKnightRes {
  string id = 1;
  string name = 2;
  string email = 3;
  bool is_active = 5;
}
message KnightStatusReq {
  string email = 1;
}
message KnightStatusRes {
  bool is_active = 1;
}
message UpdateStatusReq {
  bool active = 1;
  string email = 2;
}
message GetKnightsReq {}
message Knight {
  string id = 1;
  string name = 2;
  string email = 3;
  bool is_active = 4;
}

message GetKnightsRes {
  repeated Knight knights = 1;
}
message UpdateStatusRes {}

message GetKnightReq {
  string email = 1;
}

message GetKnightRes {
  Knight knight = 1;
}
message DeleteKnightReq {
  string email = 1;
}
message DeleteKnightRes {}

service KnightService {
  rpc AddKnight(AddKnightReq) returns (AddKnightRes) {
    option (google.api.http) = {
      post: "/v1/knight"
      body: "*"
    };
  }

  rpc GetKnightStatus(KnightStatusReq) returns (KnightStatusRes) {
    option (google.api.http) = {
      get: "/v1/knight/status"
      body: "*"
    };
  }

  rpc UpdateStatus(UpdateStatusReq) returns (UpdateStatusRes) {
    option (google.api.http) = {
      patch: "/v1/knight/status"
      body: "*"
    };
  }

  rpc GetKnights(GetKnightsReq) returns (GetKnightsRes) {
    option (google.api.http) = {
      get: "/v1/knights"
    };
  }

  rpc GetKnight(GetKnightReq) returns (GetKnightRes) {
    option (google.api.http) = {
      get: "/v1/knight"
      body: "*"
    };
  }

  rpc DeleteKnight(DeleteKnightReq) returns (DeleteKnightRes) {
    option (google.api.http) = {
      delete: "/v1/knight"
      body: "*"
    };
  }
}